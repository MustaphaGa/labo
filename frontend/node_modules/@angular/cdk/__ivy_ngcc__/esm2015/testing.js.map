{"version":3,"file":"testing.js","sources":["../../../src/cdk/testing/event-objects.ts","../../../src/cdk/testing/dispatch-events.ts","../../../src/cdk/testing/element-focus.ts","../../../src/cdk/testing/type-in-element.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Modifier keys that may be held while typing. */\nexport interface ModifierKeys {\n  control?: boolean;\n  alt?: boolean;\n  shift?: boolean;\n  meta?: boolean;\n}\n\n/**\n * Creates a browser MouseEvent with the specified options.\n * @docs-private\n */\nexport function createMouseEvent(type: string, x = 0, y = 0, button = 0) {\n  const event = document.createEvent('MouseEvent');\n  const originalPreventDefault = event.preventDefault;\n\n  event.initMouseEvent(type,\n    true, /* canBubble */\n    true, /* cancelable */\n    window, /* view */\n    0, /* detail */\n    x, /* screenX */\n    y, /* screenY */\n    x, /* clientX */\n    y, /* clientY */\n    false, /* ctrlKey */\n    false, /* altKey */\n    false, /* shiftKey */\n    false, /* metaKey */\n    button, /* button */\n    null /* relatedTarget */);\n\n  // `initMouseEvent` doesn't allow us to pass the `buttons` and\n  // defaults it to 0 which looks like a fake event.\n  Object.defineProperty(event, 'buttons', {get: () => 1});\n\n  // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n  event.preventDefault = function() {\n    Object.defineProperty(event, 'defaultPrevented', { get: () => true });\n    return originalPreventDefault.apply(this, arguments);\n  };\n\n  return event;\n}\n\n/**\n * Creates a browser TouchEvent with the specified pointer coordinates.\n * @docs-private\n */\nexport function createTouchEvent(type: string, pageX = 0, pageY = 0) {\n  // In favor of creating events that work for most of the browsers, the event is created\n  // as a basic UI Event. The necessary details for the event will be set manually.\n  const event = document.createEvent('UIEvent');\n  const touchDetails = {pageX, pageY};\n\n  // TS3.6 removes the initUIEvent method and suggests porting to \"new UIEvent()\".\n  (event as any).initUIEvent(type, true, true, window, 0);\n\n  // Most of the browsers don't have a \"initTouchEvent\" method that can be used to define\n  // the touch details.\n  Object.defineProperties(event, {\n    touches: {value: [touchDetails]},\n    targetTouches: {value: [touchDetails]},\n    changedTouches: {value: [touchDetails]}\n  });\n\n  return event;\n}\n\n/**\n * Dispatches a keydown event from an element.\n * @docs-private\n */\nexport function createKeyboardEvent(type: string, keyCode: number = 0, key: string = '',\n                                    target?: Element, modifiers: ModifierKeys = {}) {\n  const event = document.createEvent('KeyboardEvent') as any;\n  const originalPreventDefault = event.preventDefault;\n\n  // Firefox does not support `initKeyboardEvent`, but supports `initKeyEvent`.\n  if (event.initKeyEvent) {\n    event.initKeyEvent(type, true, true, window, modifiers.control, modifiers.alt, modifiers.shift,\n        modifiers.meta, keyCode);\n  } else {\n    // `initKeyboardEvent` expects to receive modifiers as a whitespace-delimited string\n    // See https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent\n    const modifiersStr = (modifiers.control ? 'Control ' : '' + modifiers.alt ? 'Alt ' : '' +\n        modifiers.shift ? 'Shift ' : '' + modifiers.meta ? 'Meta' : '').trim();\n    event.initKeyboardEvent(type,\n        true, /* canBubble */\n        true, /* cancelable */\n        window, /* view */\n        0, /* char */\n        key, /* key */\n        0, /* location */\n        modifiersStr, /* modifiersList */\n        false /* repeat */);\n  }\n\n  // Webkit Browsers don't set the keyCode when calling the init function.\n  // See related bug https://bugs.webkit.org/show_bug.cgi?id=16735\n  Object.defineProperties(event, {\n    keyCode: { get: () => keyCode },\n    key: { get: () => key },\n    target: { get: () => target },\n    ctrlKey: { get: () => !!modifiers.control },\n    altKey: { get: () => !!modifiers.alt },\n    shiftKey: { get: () => !!modifiers.shift },\n    metaKey: { get: () => !!modifiers.meta }\n  });\n\n  // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n  event.preventDefault = function() {\n    Object.defineProperty(event, 'defaultPrevented', { get: () => true });\n    return originalPreventDefault.apply(this, arguments);\n  };\n\n  return event;\n}\n\n/**\n * Creates a fake event object with any desired event type.\n * @docs-private\n */\nexport function createFakeEvent(type: string, canBubble = false, cancelable = true) {\n  const event = document.createEvent('Event');\n  event.initEvent(type, canBubble, cancelable);\n  return event;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  createFakeEvent,\n  createKeyboardEvent,\n  createMouseEvent,\n  createTouchEvent,\n  ModifierKeys\n} from './event-objects';\n\n/**\n * Utility to dispatch any event on a Node.\n * @docs-private\n */\nexport function dispatchEvent(node: Node | Window, event: Event): Event {\n  node.dispatchEvent(event);\n  return event;\n}\n\n/**\n * Shorthand to dispatch a fake event on a specified node.\n * @docs-private\n */\nexport function dispatchFakeEvent(node: Node | Window, type: string, canBubble?: boolean): Event {\n  return dispatchEvent(node, createFakeEvent(type, canBubble));\n}\n\n/**\n * Shorthand to dispatch a keyboard event with a specified key code.\n * @docs-private\n */\nexport function dispatchKeyboardEvent(node: Node, type: string, keyCode?: number, key?: string,\n                                      target?: Element, modifiers?: ModifierKeys): KeyboardEvent {\n  return dispatchEvent(node,\n      createKeyboardEvent(type, keyCode, key, target, modifiers)) as KeyboardEvent;\n}\n\n/**\n * Shorthand to dispatch a mouse event on the specified coordinates.\n * @docs-private\n */\nexport function dispatchMouseEvent(node: Node, type: string, x = 0, y = 0,\n  event = createMouseEvent(type, x, y)): MouseEvent {\n  return dispatchEvent(node, event) as MouseEvent;\n}\n\n/**\n * Shorthand to dispatch a touch event on the specified coordinates.\n * @docs-private\n */\nexport function dispatchTouchEvent(node: Node, type: string, x = 0, y = 0) {\n  return dispatchEvent(node, createTouchEvent(type, x, y));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {dispatchFakeEvent} from './dispatch-events';\n\nfunction triggerFocusChange(element: HTMLElement, event: 'focus' | 'blur') {\n  let eventFired = false;\n  const handler = () => eventFired = true;\n  element.addEventListener(event, handler);\n  element[event]();\n  element.removeEventListener(event, handler);\n  if (!eventFired) {\n    dispatchFakeEvent(element, event);\n  }\n}\n\n/**\n * Patches an elements focus and blur methods to emit events consistently and predictably.\n * This is necessary, because some browsers, like IE11, will call the focus handlers asynchronously,\n * while others won't fire them at all if the browser window is not focused.\n * @docs-private\n */\nexport function patchElementFocus(element: HTMLElement) {\n  element.focus = () => dispatchFakeEvent(element, 'focus');\n  element.blur = () => dispatchFakeEvent(element, 'blur');\n}\n\n/** @docs-private */\nexport function triggerFocus(element: HTMLElement) {\n  triggerFocusChange(element, 'focus');\n}\n\n/** @docs-private */\nexport function triggerBlur(element: HTMLElement) {\n  triggerFocusChange(element, 'blur');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {dispatchFakeEvent, dispatchKeyboardEvent} from './dispatch-events';\nimport {triggerFocus} from './element-focus';\nimport {ModifierKeys} from './event-objects';\n\n/**\n * Checks whether the given Element is a text input element.\n * @docs-private\n */\nexport function isTextInput(element: Element): element is HTMLInputElement | HTMLTextAreaElement {\n  return element.nodeName.toLowerCase() === 'input' ||\n      element.nodeName.toLowerCase() === 'textarea' ;\n}\n\n/**\n * Focuses an input, sets its value and dispatches\n * the `input` event, simulating the user typing.\n * @param element Element onto which to set the value.\n * @param keys The keys to send to the element.\n * @docs-private\n */\nexport function typeInElement(\n    element: HTMLElement, ...keys: (string | {keyCode?: number, key?: string})[]): void;\n\n/**\n * Focuses an input, sets its value and dispatches\n * the `input` event, simulating the user typing.\n * @param element Element onto which to set the value.\n * @param modifiers Modifier keys that are held while typing.\n * @param keys The keys to send to the element.\n * @docs-private\n */\nexport function typeInElement(element: HTMLElement, modifiers: ModifierKeys,\n                              ...keys: (string | {keyCode?: number, key?: string})[]): void;\n\nexport function typeInElement(element: HTMLElement, ...modifiersAndKeys: any) {\n  const first = modifiersAndKeys[0];\n  let modifiers: ModifierKeys;\n  let rest: (string | {keyCode?: number, key?: string})[];\n  if (typeof first !== 'string' && first.keyCode === undefined && first.key === undefined) {\n    modifiers = first;\n    rest = modifiersAndKeys.slice(1);\n  } else {\n    modifiers = {};\n    rest = modifiersAndKeys;\n  }\n  const keys: {keyCode?: number, key?: string}[] = rest\n      .map(k => typeof k === 'string' ?\n          k.split('').map(c => ({keyCode: c.toUpperCase().charCodeAt(0), key: c})) : [k])\n      .reduce((arr, k) => arr.concat(k), []);\n\n  triggerFocus(element);\n  for (const key of keys) {\n    dispatchKeyboardEvent(element, 'keydown', key.keyCode, key.key, element, modifiers);\n    dispatchKeyboardEvent(element, 'keypress', key.keyCode, key.key, element, modifiers);\n    if (isTextInput(element) && key.key && key.key.length === 1) {\n      element.value += key.key;\n      dispatchFakeEvent(element, 'input');\n    }\n    dispatchKeyboardEvent(element, 'keyup', key.keyCode, key.key, element, modifiers);\n  }\n}\n\n/**\n * Clears the text in an input or textarea element.\n * @docs-private\n */\nexport function clearElement(element: HTMLInputElement | HTMLTextAreaElement) {\n  triggerFocus(element as HTMLElement);\n  element.value = '';\n  dispatchFakeEvent(element, 'input');\n}\n"]}